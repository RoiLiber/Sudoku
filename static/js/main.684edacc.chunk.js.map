{"version":3,"sources":["consts.js","components/Header/Header.js","components/Header/index.js","actions/mainActions.js","actions/actionTypes.js","components/PopUp/index.js","components/PopUp/PopUp.js","components/Clock/index.js","components/Clock/Clock.js","components/GamePage/GamePage.js","components/Loader/index.js","components/Loader/Loader.js","components/Home/index.js","components/Home/Home.js","components/ScorePage/index.js","components/ScorePage/ScorePage.js","serviceWorker.js","reducers/mainReducer.js","rootReducer.js","index.js","App.js"],"names":["ROUTES","blankBoard","dices","compose","Header","withRouter","useState","selected","setSelected","setSelectedButton","pageName","className","to","Button","variant","onClick","newGamePopUp","boll","dispatch","type","payload","PopUp","props","title","useDispatch","setLevel","level","fetch","then","response","json","data","setTimeout","catch","err","console","log","setNewGameRequest","Clock","stopClock","clockMin","setClockMin","clockSec","setClockSec","useEffect","interval","clearInterval","setInterval","seconds","Home","newGameData","useSelector","state","mainReducer","gameTable","setGameTable","dragDice","setDragDice","dropLineAndIndex","setDropLineAndIndex","isDiceValid","setIsDiceValid","setStopClock","onDragStart","e","num","onDrop","line","lineIndex","newGameLines","preventDefault","splice","square","rowIndex","rowNumber","newLineArray","pushToArray","rows","indexArray","map","row","item","push","creatSquare","index","Number","isGameTableDone","isEmpty","checkClearItems","validateDoneGame","diceValidation","squares","newGameTable","y","x","value","setTable","delay","key","bottom","draggable","event","i","onDragOver","clearLastDice","Loader","setNewGameLevel","loader","ScorePage","Boolean","window","location","hostname","match","initialState","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","exect","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"6ZAIMA,EACE,QADFA,EAEO,UAGPC,EAAa,CACjB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAG7BC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,G,MCgBxBC,ICnCAC,EDmCAD,kBAAQE,IAARF,EA9Bf,WAAmB,IAAD,EACkBG,mBAAS,QAD3B,mBACPC,EADO,KACGC,EADH,KAGd,SAASC,EAAkBC,GACvBF,EAAYE,GAGhB,OACI,yBAAKC,UAAW,UACZ,6BACI,6CAEJ,yBAAKA,UAAW,OACZ,kBAAC,IAAD,CAAMC,GAAIZ,EAAaW,UAAW,YAC9B,kBAACE,EAAA,EAAD,CAAQF,UAAwB,SAAbJ,EAAsB,WAAa,GAC9CO,QAAQ,OACRC,QAAS,kBAAMN,EAAkB,UAFzC,SAKJ,kBAAC,IAAD,CAAMG,GAAIZ,EAAkBW,UAAW,YACnC,kBAACE,EAAA,EAAD,CAAQF,UAAwB,UAAbJ,EAAuB,WAAa,GAC/CO,QAAQ,OACRC,QAAS,kBAAMN,EAAkB,WAFzC,oB,OExBPO,EAAe,SAAAC,GACxB,OAAO,SAACC,GACJA,EAAS,CACLC,KCNmB,kBDOnBC,QAASH,M,cELNI,MCKA,SAAeC,GAAQ,IAC1BC,EAAUD,EAAVC,MACFL,EAAWM,cAEjB,SAASC,EAASC,GACdR,EHAyB,SAAAQ,GAC7B,OAAO,SAACR,GACJA,EAAS,CACLC,KCbc,aDcVC,SAAS,IAEjBO,MAAM,GAAD,OHlBA,wCGkBA,OHjBD,0CGiBC,aAA2B,EAA3B,kBAAsCD,IACtCE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHC,YAAW,WACP,OAAOd,EAAS,CACZC,KCtBY,uBDuBZC,QAASW,MAEd,QAENE,OAAM,SAACC,GACJC,QAAQC,IAAIF,OGjBXG,CAAkBX,IAG/B,OACI,yBAAKf,UAAW,iBACZ,kBAAC,OAAD,KACI,yBAAKA,UAAW,SACZ,8BAAOY,GACP,uBAAGZ,UAAU,sBACVI,QAAS,kBAAMG,EAASF,GAAa,OAExC,kBAACH,EAAA,EAAD,CACIF,UAAW,WACXG,QAAQ,OACRC,QAAS,kBAAMU,EAAS,KAH5B,QAOA,kBAACZ,EAAA,EAAD,CACIF,UAAW,WACXG,QAAQ,OACRC,QAAS,kBAAMU,EAAS,KAH5B,UAOA,kBAACZ,EAAA,EAAD,CACIF,UAAW,WACXG,QAAQ,OACRC,QAAS,kBAAMU,EAAS,KAH5B,Y,cCnCLa,MCCA,SAAehB,GAAQ,IAC1BiB,EAAcjB,EAAdiB,UADyB,EAEDjC,mBAAS,GAFR,mBAE1BkC,EAF0B,KAEhBC,EAFgB,OAGDnC,mBAAS,GAHR,mBAG1BoC,EAH0B,KAGhBC,EAHgB,KA2BjC,OAbAC,qBAAU,WACN,IAAIC,EAAW,KASf,OAPKN,EAKDO,cAAcD,GAJdA,EAAWE,aAAY,WAZvBL,EAAW,GACXC,GAAY,SAAAK,GAAO,OAAIA,EAAU,MAEjCL,EAAY,GACZF,EAAYD,EAAW,MAUpB,KAIA,kBAAMM,cAAcD,MAC5B,CAACN,EAAWG,IAGX,yBAAK/B,UAAW,iBACZ,yBAAKA,UAAW,SACZ,0BAAMA,UAAW,OAAQ6B,EAAW,GAAX,WAAoBA,GAAaA,GAC1D,0BAAM7B,UAAW,aAAjB,KACA,0BAAMA,UAAW,OAAQ+B,EAAW,GAAX,WAAoBA,GAAaA,M,MC1B3D,SAASO,IACHzB,cAAjB,IACM0B,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,eAFhC,EAGO5C,mBAASL,GAHhB,mBAGpBqD,EAHoB,KAGTC,EAHS,OAIKjD,mBAAS,IAJd,mBAIpBkD,EAJoB,KAIVC,EAJU,OAKqBnD,mBAAS,IAL9B,mBAKpBoD,EALoB,KAKFC,EALE,OAMWrD,oBAAS,GANpB,mBAMpBsD,EANoB,KAMPC,EANO,OAOOvD,oBAAS,GAPhB,mBAOpBiC,EAPoB,KAOTuB,EAPS,KAuB3B,SAASC,EAAYC,EAAGC,GACpBR,EAAYQ,GAOhB,SAASC,EAAOF,EAAGG,EAAMC,GACrB,GAAmC,KAA/Bd,EAAUa,GAAMC,GAApB,CACA,IAAIC,EAAY,YAAOf,GAEvBU,EAAEM,iBACFX,EAAoB,CAAEQ,OAAMC,cAC5BC,EAAaF,GAAMI,OAAOH,EAAW,EAAGZ,GAoB5C,SAAwBW,EAAMC,GAC1B,IAAII,EAoBR,SAAqBC,EAAUC,GAC3B,IAAIC,EAAe,GAEnB,SAASC,EAAYC,EAAMC,GACvBD,EAAKE,KAAI,SAAAC,GACLF,EAAWC,KAAI,SAAAE,GACX,GAAID,IAAQN,GAAaO,IAASR,EAAW,OAAO,EAEhDE,EAAaO,KAAK5B,EAAU0B,GAAKC,UAMjD,OAAQP,GACJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjB,OAAQD,GACJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBG,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBA,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBA,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,QACI,OAAOD,EAGf,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjB,OAAQF,GACJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBG,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBA,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBA,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,QACI,OAAOD,EAGf,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjB,OAAQF,GACJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBG,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBA,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,KAAK,EAAG,KAAK,EAAG,KAAK,EACjBA,EAAY,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,MAEJ,QACI,OAAOD,EAGf,MAEJ,QACI,OAAOA,EAGf,OAAOA,EAnGMQ,CAAYf,EAAWD,GAEpCb,EAAUa,GAAMY,KAAI,SAACE,EAAMG,GACnBhB,IAAcgB,GAAS5B,IAAa6B,OAAOJ,IAC3CpB,GAAe,MAGvBP,EAAUyB,KAAI,SAACE,EAAMG,GACbjB,IAASiB,GAAS5B,IAAa6B,OAAOJ,EAAKb,KAC3CP,GAAe,MAGvBW,EAAOO,KAAI,SAAAE,GACHzB,IAAa6B,OAAOJ,IACpBpB,GAAe,MA7B3B,WAUI,IAAMyB,GATN,WACI,IAAIC,GAAU,EAMd,OALAjC,EAAUyB,KAAI,SAAAC,GACV,OAAOA,EAAID,KAAI,SAAAE,GACNA,IAAMM,GAAU,SAGtBA,EAEcC,IAAqB5B,EAC9CE,EAAawB,GAqBbG,GArCAC,CAAevB,EAAMC,GACrBb,EAAac,GACbZ,EAAY,KA+HhB,OA9JAb,qBAAU,YAIV,WACI,IAAM+C,EAAUzC,EAAYyC,QACtBC,EAAY,YAAO3F,GAEzB0F,EAAQZ,KAAI,SAAAE,GACRW,EAAaX,EAAKY,GAAGtB,OAAOU,EAAKa,EAAG,EAAGb,EAAKc,UAEhDxC,EAAaqC,GAVbI,KACD,CAAC9C,IA6JA,kBAAC,WAAD,KACKX,GAAa,kBAAC,OAAD,CAAM0D,MAAO,KAAM,yBAAKtF,UAAW,gBAAgB,0BAAMA,UAAW,QAAjB,qBACjE,yBAAKA,UAAW,gBACZ,yBAAKA,UAAW,aACXT,EAAM6E,KAAI,SAACE,EAAMG,GACd,OAAO,kBAAC,OAAD,CAAMc,IAAKd,EAAOe,QAAM,EAACF,MAAO,IAAMb,GACzC,0BAAMgB,UAAWxC,EACXjD,UAAS,eAAUiD,EAAc,UAAY,GAApC,YAA0CJ,IAAa4B,EAAM,EAAI,SAAW,IACrFrB,YAAa,SAACsC,GAAD,OAAWtC,EAAYsC,EAAOjB,EAAM,IACjDrE,QAAS,SAACsF,GAAD,OAAWtC,EAAYsC,EAAOjB,EAAM,KACjDH,QAId,kBAAC,OAAD,KACI,yBAAKtE,UAAW,cACX2C,EAAUyB,KAAI,SAACE,EAAMqB,GAClB,OAAO,yBAAKJ,IAAKI,EAAG3F,UAAW,QAC1BsE,EAAKF,KAAI,SAACP,EAAQY,GACf,IAAMjB,EAAOmC,EACPpE,EAAMwB,EAAiBS,OAASA,GAC/BT,EAAiBU,YAAcgB,IAC9BxB,EAER,OAAO,0BAAMsC,IAAKd,EACLzE,UAAS,iBAAYuB,EAAM,MAAQ,GAA1B,YAA6C,KAAbsB,EAAkB,UAAY,IACvE+C,WAAY,SAACF,GAAD,OAAY7B,EAA6B,QAAT6B,EAtKnF/B,kBAuKuCJ,OAAQ,SAACmC,GAAD,OAAWnC,EAAOmC,EAAOlC,EAAMiB,IACvCrE,QAAS,SAACsF,GAAD,OAAWnC,EAAOmC,EAAOlC,EAAMiB,KACnDZ,YAMtB,kBAAC,EAAD,CAAOjC,UAAWA,KAChBqB,IAAgBrB,GACd,yBAAK5B,UAAW,kBACZ,kBAACE,EAAA,EAAD,CACIF,UAAW,cACXG,QAAQ,OACRC,QAAS,kBAjDjC,WACI,IAAIsD,EAAY,YAAOf,GACvBe,EAAaX,EAAiBS,MAAMI,OAAOb,EAAiBU,UAAW,EAAG,IAC1Eb,EAAac,GACbR,GAAe,GA6CoB2C,KAHnB,oBAQPjE,GACG,yBAAK5B,UAAW,kBACZ,kBAACE,EAAA,EAAD,CACIF,UAAW,wBACXG,QAAQ,OACRC,QAAS,cAHb,W,YC/NT0F,MCCA,WACX,OACI,yBAAK9F,UAAW,kBACZ,yBAAKA,UAAW,aCJbsC,MCOA,WACX,IAAM/B,EAAWM,cACXkF,EAAkBvD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYqD,mBACzDxD,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,eACrDyD,EAASxD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYsD,UAEtD,OACI,yBAAKhG,UAAW,QACZ,6CACCuC,EACK,kBAAC,EAAD,MACI,kBAACrC,EAAA,EAAD,CACFF,UAAW,WACXG,QAAQ,OACRC,QAAS,kBAAMG,EAASF,GAAa,MAHnC,oBAQT0F,GAAmB,kBAAC,EAAD,CAAOnF,MAAO,kBACjCoF,GAAU,kBAAC,EAAD,Q,MC3BRC,MCCA,WAGX,OACI,yBAAKjG,UAAU,cACX,0BAAMA,UAAW,SAAjB,cACA,yBAAKA,UAAW,kBALT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMvBoE,KAAI,SAACE,EAAMG,GACf,OAAO,0BAAMc,IAAKd,GACbH,EADE,W,MCCP4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBChBAC,EAAe,CACjBR,iBAAiB,EACjBxD,YAAa,GACbyD,QAAQ,GAoCGtD,EAjCK,WAAmC,IAAlCD,EAAiC,uDAAzB8D,EAAcC,EAAW,uCAClD,OAAQA,EAAOhG,MACX,IbVuB,kBaWnB,IAAMuF,EAAkBS,EAAO/F,QAE/B,OAAO,eACAgC,EADP,CAEIsD,oBAGR,IbjB4B,uBakBxB,IAAMxD,EAAciE,EAAO/F,QAE3B,OAAO,eACAgC,EADP,CAEIF,cACAwD,iBAAiB,EACjBC,QAAQ,IAGhB,Ib1BkB,aa2Bd,IAAM1F,EAAOkG,EAAO/F,QAEpB,OAAO,eACAgC,EADP,CAEIuD,OAAQ1F,IAGhB,QACI,OAAOmC,IClCNgE,EAAcC,0BAAgB,CACzChE,gB,QCQIiE,EAAQC,sBAAYH,EADL,GAEjBI,8BACIC,0BAAgBC,OAIxBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,mBCZO,WACT,OACM,yBAAK3G,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAQA,UAAU,eAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkH,OAAK,EAACC,KAAM9H,EAAa+H,UAAW9E,IAC3C,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAM9H,EAAkB+H,UAAWnB,IAChD,kBAAC,IAAD,CAAOkB,KAAK,IAAIF,OAAQ,kBAAM,kBAAC,IAAD,CAAUhH,GAAIZ,YDI5D,OAEFgI,SAASC,eAAe,SH6GxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxG,MAAK,SAAAyG,GACJA,EAAaC,gBAEdrG,OAAM,SAAAsG,GACLpG,QAAQoG,MAAMA,EAAMC,c","file":"static/js/main.684edacc.chunk.js","sourcesContent":["const cors = 'https://cors-anywhere.herokuapp.com/';\r\nconst url = 'http://www.cs.utep.edu/cheon/ws/sudoku/';\r\nconst ERROR_MSG = 'Sorry, unable to fetch data';\r\n\r\nconst ROUTES = {\r\n  home: '/home',\r\n  scorePage: '/scores',\r\n};\r\n\r\nconst blankBoard = [\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n];\r\n\r\nconst dices = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport {\r\n  cors,\r\n  url,\r\n  ROUTES,\r\n  ERROR_MSG,\r\n  blankBoard,\r\n  dices\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { compose } from 'redux'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { ROUTES } from '../../consts';\r\nimport './style.scss';\r\n\r\nfunction Header() {\r\n    const [selected, setSelected] = useState('HOME');\r\n\r\n    function setSelectedButton(pageName) {\r\n        setSelected(pageName)\r\n    }\r\n\r\n    return (\r\n        <div className={'header'}>\r\n            <div>\r\n                <span>Sudoku App</span>\r\n            </div>\r\n            <div className={'nav'}>\r\n                <Link to={ROUTES.home} className={'nav_link'}>\r\n                    <Button className={selected === 'HOME' ? 'selected' : ''}\r\n                            variant=\"text\"\r\n                            onClick={() => setSelectedButton('HOME')}\r\n                    >Home</Button>\r\n                </Link>\r\n                <Link to={ROUTES.scorePage} className={'nav_link'}>\r\n                    <Button className={selected === 'SCORE' ? 'selected' : ''}\r\n                            variant=\"text\"\r\n                            onClick={() => setSelectedButton('SCORE')}\r\n                    >Score Page</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(withRouter)(Header)\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport { cors, url } from '../consts';\r\n\r\nexport const newGamePopUp = boll => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.NEW_GAME_POP_UP,\r\n            payload: boll\r\n        })\r\n    }\r\n};\r\n\r\nexport const setNewGameRequest = level => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_LOADER,\r\n                payload: true\r\n        });\r\n        fetch(`${cors}${url}new/?size=${9}&level=${level}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setTimeout(() => {\r\n                    return dispatch({\r\n                        type: actionTypes.SET_NEW_GAME_REQUEST,\r\n                        payload: data\r\n                    })\r\n                }, 2000)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","export const NEW_GAME_POP_UP = 'NEW_GAME_POP_UP';\r\nexport const SET_NEW_GAME_REQUEST = 'SET_NEW_GAME_REQUEST';\r\nexport const SET_LOADER = 'SET_LOADER';\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import PopUp from './PopUp';\r\n\r\nexport default PopUp;\r\n","import React from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Zoom } from 'react-reveal';\r\nimport { setNewGameRequest, newGamePopUp } from \"../../actions/mainActions\";\r\nimport './style.scss';\r\n\r\nexport default function PopUp(props) {\r\n    const { title } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    function setLevel(level) {\r\n        dispatch(setNewGameRequest(level));\r\n    }\r\n\r\n    return (\r\n        <div className={'popup_wrapper'}>\r\n            <Zoom>\r\n                <div className={'popup'}>\r\n                    <span>{title}</span>\r\n                    <i className=\"far fa-times-circle\"\r\n                       onClick={() => dispatch(newGamePopUp(false))}\r\n                    />\r\n                    <Button\r\n                        className={'selected'}\r\n                        variant=\"text\"\r\n                        onClick={() => setLevel(1)}\r\n                    >\r\n                        Easy\r\n                    </Button>\r\n                    <Button\r\n                        className={'selected'}\r\n                        variant=\"text\"\r\n                        onClick={() => setLevel(2)}\r\n                    >\r\n                        Normal\r\n                    </Button>\r\n                    <Button\r\n                        className={'selected'}\r\n                        variant=\"text\"\r\n                        onClick={() => setLevel(3)}\r\n                    >\r\n                        Hard\r\n                    </Button>\r\n                </div>\r\n            </Zoom>\r\n        </div>\r\n    )\r\n}\r\n","import Clock from './Clock';\r\n\r\nexport default Clock;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\n\r\nexport default function Clock(props) {\r\n    const { stopClock } = props;\r\n    const [clockMin, setClockMin] = useState(0);\r\n    const [clockSec, setClockSec] = useState(0);\r\n\r\n    function runClock() {\r\n        if (clockSec < 59) {\r\n            setClockSec(seconds => seconds + 1);\r\n        } else {\r\n            setClockSec(0);\r\n            setClockMin(clockMin + 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (!stopClock) {\r\n            interval = setInterval(() => {\r\n                runClock()\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(interval)\r\n        }\r\n        return () => clearInterval(interval)\r\n    }, [stopClock, clockSec]);\r\n\r\n    return (\r\n        <div className={'clock_wrapper'}>\r\n            <div className={'clock'}>\r\n                <span className={'min'}>{clockMin < 10 ? `0${clockMin}` : clockMin}</span>\r\n                <span className={'separator'}>:</span>\r\n                <span className={'sec'}>{clockSec < 10 ? `0${clockSec}` : clockSec}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { blankBoard, dices } from '../../consts';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Fade, Zoom } from 'react-reveal';\r\nimport { newGamePopUp } from \"../../actions/mainActions\";\r\nimport Clock from \"../Clock\";\r\nimport './style.scss';\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    const newGameData = useSelector(state => state.mainReducer.newGameData);\r\n    const [gameTable, setGameTable] = useState(blankBoard);\r\n    const [dragDice, setDragDice] = useState('');\r\n    const [dropLineAndIndex, setDropLineAndIndex] = useState({});\r\n    const [isDiceValid, setIsDiceValid] = useState(true);\r\n    const [stopClock, setStopClock] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTable();\r\n    }, [newGameData]);\r\n\r\n    function setTable() {\r\n        const squares = newGameData.squares;\r\n        const newGameTable = [...blankBoard];\r\n\r\n        squares.map(item => {\r\n            newGameTable[item.y].splice(item.x, 1, item.value)\r\n        });\r\n        setGameTable(newGameTable)\r\n    }\r\n\r\n    function onDragStart(e, num) {\r\n        setDragDice(num)\r\n    }\r\n\r\n    function onDragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function onDrop(e, line, lineIndex) {\r\n        if (gameTable[line][lineIndex] !== '') {return}\r\n        let newGameLines = [...gameTable];\r\n\r\n        e.preventDefault();\r\n        setDropLineAndIndex({ line, lineIndex });\r\n        newGameLines[line].splice(lineIndex, 1, dragDice);\r\n        diceValidation(line, lineIndex);\r\n        setGameTable(newGameLines);\r\n        setDragDice('')\r\n    }\r\n\r\n    function validateDoneGame() {\r\n        function checkClearItems() {\r\n            let isEmpty = false;\r\n            gameTable.map(row => {\r\n                return row.map(item => {\r\n                    if (!item) isEmpty = true\r\n                })\r\n            });\r\n            return isEmpty\r\n        }\r\n        const isGameTableDone = !checkClearItems() && isDiceValid;\r\n        setStopClock(isGameTableDone)\r\n    }\r\n\r\n    function diceValidation(line, lineIndex) {\r\n        let square = creatSquare(lineIndex, line);\r\n\r\n        gameTable[line].map((item, index) => {\r\n            if (lineIndex !== index && dragDice === Number(item)) {\r\n                setIsDiceValid(false)\r\n            }\r\n        });\r\n        gameTable.map((item, index) => {\r\n            if (line !== index && dragDice === Number(item[lineIndex])) {\r\n                setIsDiceValid(false)\r\n            }\r\n        });\r\n        square.map(item => {\r\n            if (dragDice === Number(item)) {\r\n                setIsDiceValid(false)\r\n            }\r\n        });\r\n        validateDoneGame()\r\n    }\r\n\r\n    function creatSquare(rowIndex, rowNumber) {\r\n        let newLineArray = [];\r\n\r\n        function pushToArray(rows, indexArray) {\r\n            rows.map(row => {\r\n                indexArray.map(item => {\r\n                    if (row === rowNumber && item === rowIndex) {return false}\r\n                    else {\r\n                        newLineArray.push(gameTable[row][item]);\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n        switch (rowNumber) {\r\n            case 0: case 1: case 2: {\r\n                switch (rowIndex) {\r\n                    case 0: case 1: case 2: {\r\n                        pushToArray([0, 1, 2], [0, 1, 2]);\r\n                        break\r\n                    }\r\n                    case 3: case 4: case 5: {\r\n                        pushToArray([0, 1, 2], [3, 4, 5]);\r\n                        break\r\n                    }\r\n                    case 6: case 7: case 8: {\r\n                        pushToArray([0, 1, 2], [6, 7, 8]);\r\n                        break\r\n                    }\r\n                    default: {\r\n                        return newLineArray\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            case 3: case 4: case 5: {\r\n                switch (rowIndex) {\r\n                    case 0: case 1: case 2: {\r\n                        pushToArray([3, 4, 5], [0, 1, 2]);\r\n                        break\r\n                    }\r\n                    case 3: case 4: case 5: {\r\n                        pushToArray([3, 4, 5], [3, 4, 5]);\r\n                        break\r\n                    }\r\n                    case 6: case 7: case 8: {\r\n                        pushToArray([3, 4, 5], [6, 7, 8]);\r\n                        break\r\n                    }\r\n                    default: {\r\n                        return newLineArray\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            case 6: case 7: case 8: {\r\n                switch (rowIndex) {\r\n                    case 0: case 1: case 2: {\r\n                        pushToArray([6, 7, 8], [0, 1, 2]);\r\n                        break\r\n                    }\r\n                    case 3: case 4: case 5: {\r\n                        pushToArray([6, 7, 8], [3, 4, 5]);\r\n                        break\r\n                    }\r\n                    case 6: case 7: case 8: {\r\n                        pushToArray([6, 7, 8], [6, 7, 8]);\r\n                        break\r\n                    }\r\n                    default: {\r\n                        return newLineArray\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default: {\r\n                return newLineArray\r\n            }\r\n        }\r\n        return newLineArray\r\n    }\r\n\r\n    function clearLastDice() {\r\n        let newGameLines = [...gameTable];\r\n        newGameLines[dropLineAndIndex.line].splice(dropLineAndIndex.lineIndex, 1, '');\r\n        setGameTable(newGameLines);\r\n        setIsDiceValid(true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {stopClock && <Zoom delay={1000}><div className={'done_wrapper'}><span className={'done'}>Nice You Did It</span></div></Zoom>}\r\n            <div className={'game_wrapper'}>\r\n                <div className={'game_dice'}>\r\n                    {dices.map((item, index) => {\r\n                        return <Fade key={index} bottom delay={200 * index}>\r\n                            <span draggable={isDiceValid}\r\n                                  className={`dice ${isDiceValid ? 'pointer' : ''} ${dragDice === index+1 ? 'chosen' : ''}`}\r\n                                  onDragStart={(event) => onDragStart(event, index+1)}\r\n                                  onClick={(event) => onDragStart(event, index+1)}\r\n                            >{item}</span>\r\n                        </Fade>\r\n                    })}\r\n                </div>\r\n                <Zoom>\r\n                    <div className={'game_table'}>\r\n                        {gameTable.map((item, i) => {\r\n                            return <div key={i} className={'line'}>\r\n                                {item.map((square, index) => {\r\n                                    const line = i;\r\n                                    const err = dropLineAndIndex.line === line\r\n                                        && dropLineAndIndex.lineIndex === index\r\n                                        && !isDiceValid;\r\n\r\n                                    return <span key={index}\r\n                                                 className={`square ${err ? 'err' : ''} ${dragDice !== '' ? 'pointer' : ''}`}\r\n                                                 onDragOver={(event) => !square ? onDragOver(event) : {}}\r\n                                                 onDrop={(event) => onDrop(event, line, index)}\r\n                                                 onClick={(event) => onDrop(event, line, index)}\r\n                                    >{square}</span>\r\n                                })}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </Zoom>\r\n                <Clock stopClock={stopClock}/>\r\n                {!isDiceValid && !stopClock &&\r\n                    <div className={'button_wrapper'}>\r\n                        <Button\r\n                            className={'clear_table'}\r\n                            variant=\"text\"\r\n                            onClick={() => clearLastDice()}\r\n                        >\r\n                            Clear Last Dice\r\n                        </Button>\r\n                    </div>}\r\n                {stopClock &&\r\n                    <div className={'button_wrapper'}>\r\n                        <Button\r\n                            className={'clear_table stop_game'}\r\n                            variant=\"text\"\r\n                            onClick={() => {}}\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                        {/*<Button*/}\r\n                        {/*    className={'clear_table stop_game'}*/}\r\n                        {/*    variant=\"text\"*/}\r\n                        {/*    onClick={() => dispatch(newGamePopUp(true))}*/}\r\n                        {/*>*/}\r\n                        {/*    Play Again*/}\r\n                        {/*</Button>*/}\r\n                    </div>}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import Loader from './Loader';\r\n\r\nexport default Loader;\r\n\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className={'loader_wrapper'}>\r\n            <div className={'loader'}/>\r\n        </div>\r\n    )\r\n}\r\n","import Home from \"./Home\";\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newGamePopUp } from '../../actions/mainActions'\r\nimport PopUp from \"../PopUp\";\r\nimport GamePage from \"../GamePage/GamePage\";\r\nimport './style.scss';\r\nimport Loader from \"../Loader\";\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    const setNewGameLevel = useSelector(state => state.mainReducer.setNewGameLevel);\r\n    const newGameData = useSelector(state => state.mainReducer.newGameData);\r\n    const loader = useSelector(state => state.mainReducer.loader);\r\n\r\n    return (\r\n        <div className={'home'}>\r\n            <span>Sudoku Game</span>\r\n            {newGameData\r\n                ? <GamePage/>\r\n                    : <Button\r\n                    className={'selected'}\r\n                    variant=\"text\"\r\n                    onClick={() => dispatch(newGamePopUp(true))}\r\n                >\r\n                    Start a new game\r\n                </Button>\r\n            }\r\n            {setNewGameLevel && <PopUp title={'Select Level:'}/>}\r\n            {loader && <Loader/>}\r\n        </div>\r\n    )\r\n}\r\n","import ScorePage from './ScorePage';\r\n\r\nexport default ScorePage;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport default function ScorePage() {\r\n    const scores = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    return (\r\n        <div className=\"score_page\">\r\n            <span className={'title'}>score page</span>\r\n            <div className={'scores_wrapper'}>\r\n                {scores.map((item, index) => {\r\n                    return <span key={index}>\r\n                        {item}.\r\n                    </span>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    setNewGameLevel: false,\r\n    newGameData: '',\r\n    loader: false\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.NEW_GAME_POP_UP: {\r\n            const setNewGameLevel = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                setNewGameLevel\r\n            };\r\n        }\r\n        case actionTypes.SET_NEW_GAME_REQUEST: {\r\n            const newGameData = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                newGameData,\r\n                setNewGameLevel: false,\r\n                loader: false\r\n            };\r\n        }\r\n        case actionTypes.SET_LOADER: {\r\n            const boll = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                loader: boll\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mainReducer;\r\n","import { combineReducers } from 'redux';\r\nimport mainReducer from \"./reducers/mainReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  mainReducer\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from './rootReducer';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Header from \"./components/Header\";\nimport Home from './components/Home';\nimport ScorePage from './components/ScorePage';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from './consts';\nimport './App.css';\n\nexport default function App() {\n      return (\n            <div className=\"App\">\n                <Router>\n                    <Header className=\"App-header\"/>\n                    <Switch>\n                        <Route exect path={ROUTES.home} component={Home} />\n                        <Route exect path={ROUTES.scorePage} component={ScorePage} />\n                        <Route path=\"/\" render={() => <Redirect to={ROUTES.home} />} />\n                    </Switch>\n                </Router>\n            </div>\n      );\n}\n"],"sourceRoot":""}