{"version":3,"sources":["consts.js","components/Header/Header.js","components/Header/index.js","actions/mainActions.js","actions/actionTypes.js","components/Timer/index.js","components/Timer/Timer.js","components/GamePage/GamePage.js","components/Home/index.js","components/Home/Home.js","components/ScorePage/index.js","components/ScorePage/ScorePage.js","components/UI/PopUpWrapper/index.js","components/UI/PopUpWrapper/PopUpWrapper.js","components/SetLevelPopUp/index.js","components/SetLevelPopUp/SetLevelPopUp.js","components/SetWinPopUp/index.js","components/SetWinPopUp/SetWinPopUp.js","components/UI/Loader/index.js","components/UI/Loader/Loader.js","serviceWorker.js","reducers/mainReducer.js","rootReducer.js","index.js","App.js"],"names":["ROUTES","blankBoard","dices","compose","Header","withRouter","useState","selected","setSelected","setSelectedButton","pageName","className","to","Button","variant","onClick","newGamePopUp","boll","dispatch","type","payload","isGameDone","Timer","props","stopClock","useDispatch","clockMin","setClockMin","clockSec","setClockSec","useEffect","interval","time","setTimerResult","clearInterval","setInterval","seconds","Home","newGameData","useSelector","state","mainReducer","gameTable","setGameTable","dragDice","setDragDice","dropLineAndIndex","setDropLineAndIndex","isDiceValid","setIsDiceValid","setStopClock","onDragStart","e","num","onDrop","line","lineIndex","newGameLines","preventDefault","splice","square","rowIndex","rowNumber","newLineArray","pushToArray","rows","indexArray","map","row","item","push","creatSquare","index","Number","isGameTableDone","isEmpty","checkClearItems","console","log","validateDoneGame","diceValidation","squares","newGameTable","JSON","parse","stringify","y","x","value","setTable","key","bottom","delay","draggable","event","i","err","onDragOver","clearLastDice","ScorePage","PopUpWrapper","title","children","SetLevelPopUp","setLevel","level","fetch","then","response","json","data","setTimeout","catch","setNewGameRequest","SetWinPopUp","gameTime","sec","min","initialState","Loader","Boolean","window","location","hostname","match","setNewGameLevel","gameDone","loader","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","popUp","exect","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.09446ab3.chunk.js","sourcesContent":["const cors = 'https://cors-anywhere.herokuapp.com/';\r\nconst url = 'http://www.cs.utep.edu/cheon/ws/sudoku/';\r\nconst ERROR_MSG = 'Sorry, unable to fetch data';\r\n\r\nconst ROUTES = {\r\n  home: '/home',\r\n  scorePage: '/scores',\r\n};\r\n\r\nconst testBlankBoard = [\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n  ['', '', '', '', '', '', '', '', ''],\r\n];\r\n\r\nconst blankBoard = [\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '0', '0', '0', '0', '0'],\r\n  ['0', '0', '0', '0', '', '', '', '', ''],\r\n];\r\n\r\nconst dices = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport {\r\n  cors,\r\n  url,\r\n  ROUTES,\r\n  ERROR_MSG,\r\n  blankBoard,\r\n  dices\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { compose } from 'redux'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { ROUTES } from '../../consts';\r\nimport './style.scss';\r\n\r\nfunction Header() {\r\n    const [selected, setSelected] = useState('HOME');\r\n\r\n    function setSelectedButton(pageName) {\r\n        setSelected(pageName)\r\n    }\r\n\r\n    return (\r\n        <div className={'header'}>\r\n            <div>\r\n                <span>Sudoku App</span>\r\n            </div>\r\n            <div className={'nav'}>\r\n                <Link to={ROUTES.home} className={'nav_link'}>\r\n                    <Button className={selected === 'HOME' ? 'selected' : ''}\r\n                            variant=\"text\"\r\n                            onClick={() => setSelectedButton('HOME')}\r\n                    >Home</Button>\r\n                </Link>\r\n                <Link to={ROUTES.scorePage} className={'nav_link'}>\r\n                    <Button className={selected === 'SCORE' ? 'selected' : ''}\r\n                            variant=\"text\"\r\n                            onClick={() => setSelectedButton('SCORE')}\r\n                    >Score Page</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(withRouter)(Header)\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport { cors, url } from '../consts';\r\n\r\nexport const newGamePopUp = boll => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.NEW_GAME_POP_UP,\r\n            payload: boll\r\n        })\r\n    }\r\n};\r\n\r\nexport const setTimerResult = time => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_TIMER_RESULT,\r\n            payload: time\r\n        })\r\n    }\r\n};\r\n\r\nexport const isGameDone = boll => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.IS_GAME_DONE,\r\n            payload: boll\r\n        })\r\n    }\r\n};\r\n\r\nexport const clearState = initialState => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.CLEAR_STATE,\r\n            payload: initialState\r\n        })\r\n    }\r\n};\r\n\r\nexport const setNewGameRequest = level => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_LOADER,\r\n                payload: true\r\n        });\r\n        fetch(`${cors}${url}new/?size=${9}&level=${level}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setTimeout(() => {\r\n                    return dispatch({\r\n                        type: actionTypes.SET_NEW_GAME_REQUEST,\r\n                        payload: data\r\n                    })\r\n                }, 2000)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","export const NEW_GAME_POP_UP = 'NEW_GAME_POP_UP';\r\nexport const SET_NEW_GAME_REQUEST = 'SET_NEW_GAME_REQUEST';\r\nexport const SET_LOADER = 'SET_LOADER';\r\nexport const IS_GAME_DONE = 'IS_GAME_DONE';\r\nexport const CLEAR_STATE = 'CLEAR_STATE';\r\nexport const SET_TIMER_RESULT = 'SET_TIMER_RESULT';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Timer from './Timer';\r\n\r\nexport default Timer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { setTimerResult } from '../../actions/mainActions';\r\nimport { useDispatch } from \"react-redux\";\r\nimport './style.scss';\r\n\r\nexport default function Timer(props) {\r\n    const { stopClock } = props;\r\n    const dispatch = useDispatch();\r\n    const [clockMin, setClockMin] = useState(0);\r\n    const [clockSec, setClockSec] = useState(0);\r\n\r\n    function runClock() {\r\n        if (clockSec < 59) {\r\n            setClockSec(seconds => seconds + 1);\r\n        } else {\r\n            setClockSec(0);\r\n            setClockMin(clockMin + 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (!stopClock) {\r\n            interval = setInterval(() => {\r\n                runClock()\r\n            }, 1000);\r\n        } else {\r\n            const time = { clockMin, clockSec };\r\n            dispatch(setTimerResult(time));\r\n            clearInterval(interval)\r\n        }\r\n        return () => clearInterval(interval)\r\n    }, [stopClock, clockSec]);\r\n\r\n    return (\r\n        <div className={'timer_wrapper'}>\r\n            <div className={'timer'}>\r\n                <span className={'min'}>{clockMin < 10 ? `0${clockMin}` : clockMin}</span>\r\n                <span className={'separator'}>:</span>\r\n                <span className={'sec'}>{clockSec < 10 ? `0${clockSec}` : clockSec}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { blankBoard, dices } from '../../consts';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { isGameDone } from '../../actions/mainActions';\r\nimport { Fade, Zoom } from 'react-reveal';\r\nimport Timer from \"../Timer\";\r\nimport './style.scss';\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    const newGameData = useSelector(state => state.mainReducer.newGameData);\r\n    const [gameTable, setGameTable] = useState([]);\r\n    const [dragDice, setDragDice] = useState('');\r\n    const [dropLineAndIndex, setDropLineAndIndex] = useState({});\r\n    const [isDiceValid, setIsDiceValid] = useState(true);\r\n    const [stopClock, setStopClock] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTable();\r\n    }, [newGameData]);\r\n\r\n    function setTable() {\r\n        const squares = newGameData.squares;\r\n        const newGameTable = JSON.parse(JSON.stringify(blankBoard));\r\n\r\n        squares.map(item => {\r\n            newGameTable[item.y].splice(item.x, 1, item.value)\r\n        });\r\n        setGameTable(newGameTable)\r\n    }\r\n\r\n    function onDragStart(e, num) {\r\n        setDragDice(num)\r\n    }\r\n\r\n    function onDragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function onDrop(e, line, lineIndex) {\r\n        if (gameTable[line][lineIndex] !== '') {return}\r\n        let newGameLines = [...gameTable];\r\n\r\n        e.preventDefault();\r\n        setDropLineAndIndex({ line, lineIndex });\r\n        newGameLines[line].splice(lineIndex, 1, dragDice);\r\n        diceValidation(line, lineIndex);\r\n        setGameTable(newGameLines);\r\n        setDragDice('')\r\n    }\r\n\r\n    function validateDoneGame() {\r\n        function checkClearItems() {\r\n            let isEmpty = false;\r\n            gameTable.map(row => {\r\n                return row.map(item => {\r\n                    if (!item) isEmpty = true\r\n                })\r\n            });\r\n            return isEmpty\r\n        }\r\n        const isGameTableDone = !checkClearItems() && isDiceValid;\r\n        console.log()\r\n        setStopClock(isGameTableDone);\r\n        dispatch(isGameDone(isGameTableDone))\r\n    }\r\n\r\n    function diceValidation(line, lineIndex) {\r\n        let square = creatSquare(lineIndex, line);\r\n\r\n        gameTable[line].map((item, index) => {\r\n            if (lineIndex !== index && dragDice === Number(item)) {\r\n                setIsDiceValid(false)\r\n            }\r\n        });\r\n        gameTable.map((item, index) => {\r\n            if (line !== index && dragDice === Number(item[lineIndex])) {\r\n                setIsDiceValid(false)\r\n            }\r\n        });\r\n        square.map(item => {\r\n            if (dragDice === Number(item)) {\r\n                setIsDiceValid(false)\r\n            }\r\n        });\r\n        validateDoneGame()\r\n    }\r\n\r\n    function creatSquare(rowIndex, rowNumber) {\r\n        let newLineArray = [];\r\n\r\n        function pushToArray(rows, indexArray) {\r\n            rows.map(row => {\r\n                indexArray.map(item => {\r\n                    if (row === rowNumber && item === rowIndex) {return false}\r\n                    else {\r\n                        newLineArray.push(gameTable[row][item]);\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n        switch (rowNumber) {\r\n            case 0: case 1: case 2: {\r\n                switch (rowIndex) {\r\n                    case 0: case 1: case 2: {\r\n                        pushToArray([0, 1, 2], [0, 1, 2]);\r\n                        break\r\n                    }\r\n                    case 3: case 4: case 5: {\r\n                        pushToArray([0, 1, 2], [3, 4, 5]);\r\n                        break\r\n                    }\r\n                    case 6: case 7: case 8: {\r\n                        pushToArray([0, 1, 2], [6, 7, 8]);\r\n                        break\r\n                    }\r\n                    default: {\r\n                        return newLineArray\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            case 3: case 4: case 5: {\r\n                switch (rowIndex) {\r\n                    case 0: case 1: case 2: {\r\n                        pushToArray([3, 4, 5], [0, 1, 2]);\r\n                        break\r\n                    }\r\n                    case 3: case 4: case 5: {\r\n                        pushToArray([3, 4, 5], [3, 4, 5]);\r\n                        break\r\n                    }\r\n                    case 6: case 7: case 8: {\r\n                        pushToArray([3, 4, 5], [6, 7, 8]);\r\n                        break\r\n                    }\r\n                    default: {\r\n                        return newLineArray\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            case 6: case 7: case 8: {\r\n                switch (rowIndex) {\r\n                    case 0: case 1: case 2: {\r\n                        pushToArray([6, 7, 8], [0, 1, 2]);\r\n                        break\r\n                    }\r\n                    case 3: case 4: case 5: {\r\n                        pushToArray([6, 7, 8], [3, 4, 5]);\r\n                        break\r\n                    }\r\n                    case 6: case 7: case 8: {\r\n                        pushToArray([6, 7, 8], [6, 7, 8]);\r\n                        break\r\n                    }\r\n                    default: {\r\n                        return newLineArray\r\n                    }\r\n                }\r\n                break\r\n            }\r\n            default: {\r\n                return newLineArray\r\n            }\r\n        }\r\n        return newLineArray\r\n    }\r\n\r\n    function clearLastDice() {\r\n        let newGameLines = [...gameTable];\r\n        newGameLines[dropLineAndIndex.line].splice(dropLineAndIndex.lineIndex, 1, '');\r\n        setGameTable(newGameLines);\r\n        setIsDiceValid(true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={'game_wrapper'}>\r\n                <div className={'game_dice'}>\r\n                    {dices.map((item, index) => {\r\n                        return <Fade key={index} bottom delay={200 * index}>\r\n                            <span draggable={isDiceValid}\r\n                                  className={`dice ${isDiceValid ? 'pointer' : ''} ${dragDice === index+1 ? 'chosen' : ''}`}\r\n                                  onDragStart={(event) => onDragStart(event, index+1)}\r\n                                  onClick={isDiceValid ? null : (event) => onDragStart(event, index+1)}\r\n                            >{item}</span>\r\n                        </Fade>\r\n                    })}\r\n                </div>\r\n                <Zoom>\r\n                    <div className={'game_table'}>\r\n                        {gameTable.map((item, i) => {\r\n                            return <div key={i} className={'line'}>\r\n                                {item.map((square, index) => {\r\n                                    const line = i;\r\n                                    const err = dropLineAndIndex.line === line\r\n                                        && dropLineAndIndex.lineIndex === index\r\n                                        && !isDiceValid;\r\n\r\n                                    return <span key={index}\r\n                                                 className={`square ${err ? 'err' : ''} ${dragDice !== '' ? 'pointer' : ''}`}\r\n                                                 onDragOver={(event) => !square ? onDragOver(event) : {}}\r\n                                                 onDrop={(event) => onDrop(event, line, index)}\r\n                                                 onClick={(event) => onDrop(event, line, index)}\r\n                                    >{square}</span>\r\n                                })}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </Zoom>\r\n                <Timer stopClock={stopClock}/>\r\n                {!isDiceValid && !stopClock &&\r\n                    <div className={'button_wrapper'}>\r\n                        <Button\r\n                            className={'clear_table'}\r\n                            variant=\"text\"\r\n                            onClick={() => clearLastDice()}\r\n                        >\r\n                            Clear Last Dice\r\n                        </Button>\r\n                    </div>}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import Home from \"./Home\";\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newGamePopUp } from '../../actions/mainActions'\r\nimport GamePage from \"../GamePage/GamePage\";\r\nimport './style.scss';\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    const newGameData = useSelector(state => state.mainReducer.newGameData);\r\n\r\n    return (\r\n        <div className={'home'}>\r\n            <span>Sudoku Game</span>\r\n            {newGameData\r\n                ? <GamePage/>\r\n                    : <Button\r\n                    className={'selected'}\r\n                    variant=\"text\"\r\n                    onClick={() => dispatch(newGamePopUp(true))}\r\n                >\r\n                    Start a new game\r\n                </Button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import ScorePage from './ScorePage';\r\n\r\nexport default ScorePage;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport default function ScorePage() {\r\n    const scores = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    return (\r\n        <div className=\"score_page\">\r\n            <span className={'title'}>score page</span>\r\n            <div className={'scores_wrapper'}>\r\n                {scores.map((item, index) => {\r\n                    return <span key={index}>\r\n                        {item}.\r\n                    </span>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import PopUpWrapper from './PopUpWrapper';\r\n\r\nexport default PopUpWrapper;\r\n","import React from 'react';\r\nimport { Zoom } from 'react-reveal';\r\nimport './style.scss';\r\n\r\nexport default function PopUpWrapper(props) {\r\n    const { title, children } = props;\r\n\r\n    return (\r\n        <div className={'popup_wrapper'}>\r\n            <Zoom>\r\n                <div className={'popup'}>\r\n                    <span className={'title'}>{title}</span>\r\n                    {children}\r\n                </div>\r\n            </Zoom>\r\n        </div>\r\n    )\r\n}\r\n","import SetLevelPopUp from './SetLevelPopUp';\r\n\r\nexport default SetLevelPopUp;\r\n","import React from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNewGameRequest, newGamePopUp } from \"../../actions/mainActions\";\r\nimport './style.scss';\r\n\r\nexport default function SetLevelPopUp() {\r\n    const dispatch = useDispatch();\r\n\r\n    function setLevel(level) {\r\n        dispatch(setNewGameRequest(level));\r\n    }\r\n\r\n    return (\r\n        <div className={'select_level_wrapper'}>\r\n            <i className=\"far fa-times-circle\"\r\n               onClick={() => dispatch(newGamePopUp(false))}\r\n            />\r\n            <div className={'buttons_wrapper'}>\r\n                <Button\r\n                    className={'selected'}\r\n                    variant=\"text\"\r\n                    onClick={() => setLevel(1)}\r\n                >\r\n                    Easy\r\n                </Button>\r\n                <Button\r\n                    className={'selected'}\r\n                    variant=\"text\"\r\n                    onClick={() => setLevel(2)}\r\n                >\r\n                    Normal\r\n                </Button>\r\n                <Button\r\n                    className={'selected'}\r\n                    variant=\"text\"\r\n                    onClick={() => setLevel(3)}\r\n                >\r\n                    Hard\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import SetWinPopUp from './SetWinPopUp';\r\n\r\nexport default SetWinPopUp;\r\n","import React from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearState, newGamePopUp, isGameDone } from \"../../actions/mainActions\";\r\nimport './style.scss';\r\n\r\nexport default function SetWinPopUp() {\r\n    const dispatch = useDispatch();\r\n    const gameTime = useSelector(state => state.mainReducer.gameTime);\r\n    const sec = gameTime.clockSec < 10 ? `0${gameTime.clockSec}` : gameTime.clockSec;\r\n    const min = gameTime.clockMin < 10 ? `0${gameTime.clockMin}` : gameTime.clockMin;\r\n\r\n    function playAgain() {\r\n        dispatch(newGamePopUp(true));\r\n        dispatch(isGameDone(false));\r\n    }\r\n\r\n    return (\r\n        <div className={'select_action_wrapper'}>\r\n            <span className={'time'}>Your Time is {min}:{sec}</span>\r\n            <div className={'buttons_wrapper'}>\r\n                <Button\r\n                    className={'stop_game'}\r\n                    variant=\"text\"\r\n                    onClick={() => dispatch(clearState())}\r\n                >\r\n                    Done\r\n                </Button>\r\n                <Button\r\n                    className={'stop_game'}\r\n                    variant=\"text\"\r\n                    onClick={() => playAgain()}\r\n                >\r\n                    Play Again\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Loader from './Loader';\r\n\r\nexport default Loader;\r\n\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className={'loader_wrapper'}>\r\n            <div className={'loader'}/>\r\n        </div>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    setNewGameLevel: false,\r\n    gameDone: false,\r\n    newGameData: '',\r\n    loader: false,\r\n    gameTime: ''\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.NEW_GAME_POP_UP: {\r\n            const setNewGameLevel = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                setNewGameLevel\r\n            };\r\n        }\r\n        case actionTypes.SET_NEW_GAME_REQUEST: {\r\n            const newGameData = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                newGameData,\r\n                setNewGameLevel: false,\r\n                loader: false\r\n            };\r\n        }\r\n        case actionTypes.SET_LOADER: {\r\n            const boll = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                loader: boll\r\n            };\r\n        }\r\n        case actionTypes.IS_GAME_DONE: {\r\n            const gameDone = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                gameDone\r\n            };\r\n        }\r\n        case actionTypes.SET_TIMER_RESULT: {\r\n            const gameTime = action.payload;\r\n            return {\r\n                ...state,\r\n                gameTime\r\n            };\r\n        }\r\n        case actionTypes.CLEAR_STATE: {\r\n            return {\r\n                initialState\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mainReducer;\r\n","import { combineReducers } from 'redux';\r\nimport mainReducer from \"./reducers/mainReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  mainReducer\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from './rootReducer';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Header from \"./components/Header\";\nimport Home from './components/Home';\nimport ScorePage from './components/ScorePage';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { ROUTES } from './consts';\nimport { useSelector } from \"react-redux\";\nimport PopUpWrapper from \"./components/UI/PopUpWrapper\";\nimport SetLevelPopUp from \"./components/SetLevelPopUp\";\nimport SetWinPopUp from './components/SetWinPopUp';\nimport Loader from \"./components/UI/Loader\";\nimport './App.scss';\n\nexport default function App() {\n    const setNewGameLevel = useSelector(state => state.mainReducer.setNewGameLevel);\n    const gameDone = useSelector(state => state.mainReducer.gameDone);\n    const loader = useSelector(state => state.mainReducer.loader);\n    const popUp = setNewGameLevel || gameDone;\n\n      return (\n            <div className=\"App\">\n                <Router>\n                    <Header className=\"App-header\"/>\n                    <Switch>\n                        <Route exect path={ROUTES.home} component={Home} />\n                        <Route exect path={ROUTES.scorePage} component={ScorePage} />\n                        <Route path=\"/\" render={() => <Redirect to={ROUTES.home} />} />\n                    </Switch>\n                    {popUp && <PopUpWrapper\n                        title={gameDone ? 'Nice You Did It' : 'Select Level:'}\n                        children={gameDone ? <SetWinPopUp/> : <SetLevelPopUp/>}\n                    />}\n                    {loader && <Loader/>}\n                </Router>\n            </div>\n      );\n}\n"],"sourceRoot":""}